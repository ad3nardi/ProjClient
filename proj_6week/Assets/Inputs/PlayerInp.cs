//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/PlayerInp.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInp : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInp()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInp"",
    ""maps"": [
        {
            ""name"": ""InGameAP"",
            ""id"": ""bead9c05-71c0-48a2-acc9-3b5765a8af21"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8bdc2079-cb85-4c6a-9f6f-b3e5431975eb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""North"",
                    ""type"": ""Button"",
                    ""id"": ""51f309ac-9716-4ed0-8e66-6a16d556a7da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""South"",
                    ""type"": ""Button"",
                    ""id"": ""da60c6d7-d59f-4e8c-adb4-7837fc442dce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""East"",
                    ""type"": ""Button"",
                    ""id"": ""589b5c2a-9279-496c-b793-0f5afe7a2fb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""West"",
                    ""type"": ""Button"",
                    ""id"": ""337ede6c-c44d-40e5-b63b-3afbdfa2a3fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""4455a045-943d-4999-aa1f-68b5c9b9f16a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""95f72459-5951-4729-8564-0f10a82cecbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""f9ef775f-2156-466a-840c-85d26f935e87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fb3f7509-75ee-4610-9b76-d4fdbea0a630"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""77cba46a-2466-4806-89fa-0d535e068b58"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f64dd5d3-f269-4c4b-9ab2-38eaaef6798e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""41b7fe66-f66a-4167-964d-1dff8c602db6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aaab3fb5-e756-440e-b256-2458f0421a24"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""29b01fe4-ce8d-4d5e-9e6d-8ac85eb0869e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cf629b6c-c95c-4df6-bca0-a7de8eeb3835"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""382e103c-0492-40ee-9c1e-e9c8c3236da5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""421dbf37-4670-41e8-bb0e-2bb7fd421915"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2852216f-b9c4-47da-a4af-6f46a8d64982"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b3b2b10-d56a-48d7-993c-024e194249f5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba243ce7-de8f-4d81-b3c9-935a313060cf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fcd8b01-5906-46e2-84d4-53687d5f8e03"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a6625a3-a413-4ea3-9351-a9d1dc9ee1d5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0693f73-156c-4868-98b0-eb68543c4210"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d75e275b-64c6-4740-8456-e2410ec97ca8"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGameAP
        m_InGameAP = asset.FindActionMap("InGameAP", throwIfNotFound: true);
        m_InGameAP_Move = m_InGameAP.FindAction("Move", throwIfNotFound: true);
        m_InGameAP_North = m_InGameAP.FindAction("North", throwIfNotFound: true);
        m_InGameAP_South = m_InGameAP.FindAction("South", throwIfNotFound: true);
        m_InGameAP_East = m_InGameAP.FindAction("East", throwIfNotFound: true);
        m_InGameAP_West = m_InGameAP.FindAction("West", throwIfNotFound: true);
        m_InGameAP_Fire = m_InGameAP.FindAction("Fire", throwIfNotFound: true);
        m_InGameAP_Aim = m_InGameAP.FindAction("Aim", throwIfNotFound: true);
        m_InGameAP_Run = m_InGameAP.FindAction("Run", throwIfNotFound: true);
        m_InGameAP_Jump = m_InGameAP.FindAction("Jump", throwIfNotFound: true);
        m_InGameAP_Look = m_InGameAP.FindAction("Look", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGameAP
    private readonly InputActionMap m_InGameAP;
    private IInGameAPActions m_InGameAPActionsCallbackInterface;
    private readonly InputAction m_InGameAP_Move;
    private readonly InputAction m_InGameAP_North;
    private readonly InputAction m_InGameAP_South;
    private readonly InputAction m_InGameAP_East;
    private readonly InputAction m_InGameAP_West;
    private readonly InputAction m_InGameAP_Fire;
    private readonly InputAction m_InGameAP_Aim;
    private readonly InputAction m_InGameAP_Run;
    private readonly InputAction m_InGameAP_Jump;
    private readonly InputAction m_InGameAP_Look;
    public struct InGameAPActions
    {
        private @PlayerInp m_Wrapper;
        public InGameAPActions(@PlayerInp wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_InGameAP_Move;
        public InputAction @North => m_Wrapper.m_InGameAP_North;
        public InputAction @South => m_Wrapper.m_InGameAP_South;
        public InputAction @East => m_Wrapper.m_InGameAP_East;
        public InputAction @West => m_Wrapper.m_InGameAP_West;
        public InputAction @Fire => m_Wrapper.m_InGameAP_Fire;
        public InputAction @Aim => m_Wrapper.m_InGameAP_Aim;
        public InputAction @Run => m_Wrapper.m_InGameAP_Run;
        public InputAction @Jump => m_Wrapper.m_InGameAP_Jump;
        public InputAction @Look => m_Wrapper.m_InGameAP_Look;
        public InputActionMap Get() { return m_Wrapper.m_InGameAP; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameAPActions set) { return set.Get(); }
        public void SetCallbacks(IInGameAPActions instance)
        {
            if (m_Wrapper.m_InGameAPActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnMove;
                @North.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnNorth;
                @North.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnNorth;
                @North.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnNorth;
                @South.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnSouth;
                @South.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnSouth;
                @South.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnSouth;
                @East.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnEast;
                @East.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnEast;
                @East.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnEast;
                @West.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnWest;
                @West.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnWest;
                @West.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnWest;
                @Fire.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnFire;
                @Aim.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnAim;
                @Run.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnRun;
                @Jump.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnJump;
                @Look.started -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_InGameAPActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_InGameAPActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @North.started += instance.OnNorth;
                @North.performed += instance.OnNorth;
                @North.canceled += instance.OnNorth;
                @South.started += instance.OnSouth;
                @South.performed += instance.OnSouth;
                @South.canceled += instance.OnSouth;
                @East.started += instance.OnEast;
                @East.performed += instance.OnEast;
                @East.canceled += instance.OnEast;
                @West.started += instance.OnWest;
                @West.performed += instance.OnWest;
                @West.canceled += instance.OnWest;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public InGameAPActions @InGameAP => new InGameAPActions(this);
    public interface IInGameAPActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnNorth(InputAction.CallbackContext context);
        void OnSouth(InputAction.CallbackContext context);
        void OnEast(InputAction.CallbackContext context);
        void OnWest(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
}
